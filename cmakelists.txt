cmake_minimum_required (VERSION 2.8)

project(apcforthewin)
add_definitions(-DUNICODE -D_UNICODE)
enable_language(ASM_MASM)

#supress ml/64.exe banner...
string(REPLACE "/c" "/nologo /c" CMAKE_ASM_MASM_COMPILE_OBJECT ${CMAKE_ASM_MASM_COMPILE_OBJECT})

set(CompilerFlags
        CMAKE_CXX_FLAGS
        CMAKE_CXX_FLAGS_DEBUG
        CMAKE_CXX_FLAGS_RELEASE
        CMAKE_C_FLAGS
        CMAKE_C_FLAGS_DEBUG
        CMAKE_C_FLAGS_RELEASE
        )
foreach(CompilerFlag ${CompilerFlags})
  string(REPLACE "/MD" "/MT" ${CompilerFlag} "${${CompilerFlag}}")
endforeach()

string(REPLACE "/pdb:<TARGET_PDB>" "" CMAKE_C_LINK_EXECUTABLE ${CMAKE_C_LINK_EXECUTABLE})
string(REPLACE "/pdb:<TARGET_PDB>" "" CMAKE_CXX_LINK_EXECUTABLE ${CMAKE_CXX_LINK_EXECUTABLE})

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /GS-")

if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        add_executable(apcforthewin64 main.c findrwx.c asm_code64/asm_code.asm)
        set_target_properties(apcforthewin64 PROPERTIES LINK_FLAGS "/SUBSYSTEM:CONSOLE")
        target_link_libraries(apcforthewin64 ntdll.lib)
elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /Gz")
        add_executable(apcforthewin32 main.c findrwx.c asm_code32/asm_code.asm)
        set_target_properties(apcforthewin32 PROPERTIES LINK_FLAGS "/SUBSYSTEM:CONSOLE,5.01 /SAFESEH:NO")
        target_link_libraries(apcforthewin32 ntdll.lib)
endif()